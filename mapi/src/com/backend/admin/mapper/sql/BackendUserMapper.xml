<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.admin.mapper.BackendUserMapper">

    <resultMap type="com.backend.admin.entity.BackendUser" id="BackendUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.backend.admin.entity.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="menuUrl" column="menu_url" jdbcType="VARCHAR"/>
        <result property="menuName" column="menu_name" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.backend.admin.entity.RoleUser" id="RoleUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.backend.admin.entity.BackendUser" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="userPhone" column="user_phone" jdbcType="VARCHAR"/>
        <association property="roleList" select="selectRole" column="id"/>
        <association property="roleUserList" select="selectUserRole" column="id"/>
    </resultMap>

    <select id="selectRole" resultMap="RoleMap">
        select r.id, r.menu_url, r.menu_name from role r
        where r.id in
              (select ru.role_id from role_user ru where ru.user_id = #{id} and ru.state = 1)
    </select>

    <select id="selectUserRole" resultMap="RoleUserMap">
        select ru.id, ru.role_id, ru.user_id, ru.state from role_user ru
        where ru.user_id = #{id}
    </select>

    <select id="getUserById" resultMap="UserMap">
        SELECT bu.id, bu.user_name, bu.password, bu.user_phone, bu.state FROM backend_user bu
        WHERE bu.state = 1
        AND bu.id = #{id}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="BackendUserMap">
        select
          id, user_name, password, user_phone
        from fqgj.backend_user
        where id = #{id}
    </select>

    <!--查询单个-->
    <select id="queryByUserName" resultMap="BackendUserMap">
        select
            id, user_name, password, user_phone
        from fqgj.backend_user
        where user_name = #{name}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BackendUserMap">
        select
          id, user_name, password, user_phone
        from fqgj.backend_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BackendUserMap">
        select
          id, user_name, password, user_phone, state
        from fqgj.backend_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and user_phone = #{userPhone}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into fqgj.backend_user(user_name, password, user_phone)
        values (#{userName}, #{password}, #{userPhone})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update fqgj.backend_user
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="userPhone != null and userPhone != ''">
                user_phone = #{userPhone},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from fqgj.backend_user where id = #{id}
    </delete>

    <select id="checkUser" resultType="java.lang.Integer">
        select count(1) from backend_user where user_name = #{userName}
    </select>
</mapper>